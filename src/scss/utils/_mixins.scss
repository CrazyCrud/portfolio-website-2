@import "../base/media-queries";

@mixin breakpoint($point) {
  @if $point == large {
    @media (min-width: $mp-1600) {
      @content;
    }
  } @else if $point == medium {
    @media (min-width: $mq-1200) {
      @content;
    }
  } @else if $point == small {
    @media (min-width: $mq-720) {
      @content;
    }
  }
}

@mixin fadeIn() {
  .fade-in-element {
    $base-border-color: gainsboro !default;
    $base-border-radius: 3px !default;
    $base-background-color: white !default;
    $base-line-height: 1.5em !default;
    $base-spacing: 1.5em !default;
    $dark-gray: #333 !default;
    $base-font-color: $dark-gray !default;

    @include clearfix;
    background: $base-background-color;
    border: 1px solid silver;
    border-radius: $base-border-radius;
    box-shadow: 0 2px 2px transparentize(black, 0.8);
    line-height: $base-line-height;
    margin-bottom: 4em;
    padding: $base-spacing;
    text-align: center;
    width: 100%;

    p {
      color: $base-font-color;
      line-height: $base-line-height;
    }
  }

  .js-fade-element-hide {
    opacity: 0;
  }

  .js-fade-element-show {
    opacity: 1;
    transition: all 0.4s ease-in-out;
  }
}

@mixin texture($gradient-angle, $bg-color-1, $bg-color-2, $texture-number, $inverted) { $texture-list:
        "paper.png"             // Fabric and paper
        "rice_paper.png"
        "noise_lines.png"
        "fabric_plaid.png"
        "first_aid_kit.png"
        "texturetastic_gray.png"
        "lil_fiber.png"
        "tex2res5.png"
        "skin_side_up.png"
        "light_noise_diagonal.png"
        "chruch.png"
        "45degreee_fabric.png"
        "bgnoise_lg.png"
        "little_pluses.png"
        "squairy_light.png"
        "white_texture.png"
        "binding_light.png"
        "double_lined.png"      // Grid, mesh and squares
        "grid.png"
        "absurdidad.png"
        "grid_noise.png"
        "fancy_deboss.png"
        "graphy.png"
        "noise_pattern_with_crosslines.png"
        "old_mathematics.png"
        "ps_neutral.png"
        "subtle_freckles.png"
        "wavegrid.png"
        "az_subtle.png"
        "tiny_grid.png"
        "wavegrid.png"
        "gridme.png"
        "noisy_grid.png"
        "subtlenet2.png"
        "white_carbon.png"
        "lghtmesh.png"
        "p5.png"                 // Dots
        "worn_dots.png"
        "subtle_dots.png"
        "brillant.png"
        "farmer.png"
        "retina_dust.png"        // Lines
        "pinstripe.png"
        "line_horizontal1.png"
        "line_horizontal2.png"
        "linen.png"
        "vintage_speckles.png"   // Patina and irregular
        "subtle_grunge.png"
        "old_wall.png"
        "brushed.png"
        "stucco.png"
        "mooning.png"
        "husk.png"
        "concrete_wall_2.png"
        "noisy.png"
        "concrete_wall_3.png"
        "subtle_surface.png"
        "dust.png"
        "light_alu.png"
        "corrugation.png"
        "kindajean.png"           // Diagonal
        "line_diagonal1.png"
        "line_diagonal2.png"
        "groovepaper.png"
        "brushed_alu.png"
        "rough_diagonal.png"
        "diagonal-noise.png"
        "cross_scratches.png"
        "striped_lens.png"
        "debut_light.png"
        "diagonal_waves.png"    // Special
        "honey_im_subtle.png"
        "pw_maze_white.png"
        "subtle_zebra_3d.png"
        "white_wave.png"
        "circles.png"
        "crosses.png"
        "grilled.png"
        "pw_pattern.png"
        "struckaxiom.png"
        "vichy.png"
        "wavecut.png"
        "whitey.png"
        "cream_pixels.png"
        "grey.png"
        "shinedotted.png"
        "stacked_circles.png"
        "noisy_grid_simple.png";

  @if ($inverted == 1) {
    background: url("https://raw.githubusercontent.com/thoughtbot/refills/master/source/images/textures/#{nth($texture-list, $texture-number)}"),
    linear-gradient($gradient-angle, $bg-color-1, $bg-color-2),
    center no-repeat $bg-color-1 scroll;
  }

  @else {
    background: url("https://raw.githubusercontent.com/thoughtbot/refills/master/source/images/textures/inverted/#{nth($texture-list, $texture-number)}"),
    linear-gradient($gradient-angle, $bg-color-1, $bg-color-2),
    center no-repeat $bg-color-1 scroll;
  }
}