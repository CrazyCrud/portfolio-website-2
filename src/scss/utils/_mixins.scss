@import "../base/media-queries";
@import "../base/color";

@mixin breakpoint($point) {
  @if $point == large {
    @media (min-width: $mp-1600) {
      @content;
    }
  } @else if $point == medium {
    @media (min-width: $mq-1200) {
      @content;
    }
  } @else if $point == small {
    @media (min-width: $mq-720) {
      @content;
    }
  }
}

@mixin texture($gradient-angle, $bg-color-1, $bg-color-2, $texture-number, $inverted) { $texture-list:
        "paper.png"             // Fabric and paper
        "rice_paper.png"
        "noise_lines.png"
        "fabric_plaid.png"
        "first_aid_kit.png"
        "texturetastic_gray.png"
        "lil_fiber.png"
        "tex2res5.png"
        "skin_side_up.png"
        "light_noise_diagonal.png"
        "chruch.png"
        "45degreee_fabric.png"
        "bgnoise_lg.png"
        "little_pluses.png"
        "squairy_light.png"
        "white_texture.png"
        "binding_light.png"
        "double_lined.png"      // Grid, mesh and squares
        "grid.png"
        "absurdidad.png"
        "grid_noise.png"
        "fancy_deboss.png"
        "graphy.png"
        "noise_pattern_with_crosslines.png"
        "old_mathematics.png"
        "ps_neutral.png"
        "subtle_freckles.png"
        "wavegrid.png"
        "az_subtle.png"
        "tiny_grid.png"
        "wavegrid.png"
        "gridme.png"
        "noisy_grid.png"
        "subtlenet2.png"
        "white_carbon.png"
        "lghtmesh.png"
        "p5.png"                 // Dots
        "worn_dots.png"
        "subtle_dots.png"
        "brillant.png"
        "farmer.png"
        "retina_dust.png"        // Lines
        "pinstripe.png"
        "line_horizontal1.png"
        "line_horizontal2.png"
        "linen.png"
        "vintage_speckles.png"   // Patina and irregular
        "subtle_grunge.png"
        "old_wall.png"
        "brushed.png"
        "stucco.png"
        "mooning.png"
        "husk.png"
        "concrete_wall_2.png"
        "noisy.png"
        "concrete_wall_3.png"
        "subtle_surface.png"
        "dust.png"
        "light_alu.png"
        "corrugation.png"
        "kindajean.png"           // Diagonal
        "line_diagonal1.png"
        "line_diagonal2.png"
        "groovepaper.png"
        "brushed_alu.png"
        "rough_diagonal.png"
        "diagonal-noise.png"
        "cross_scratches.png"
        "striped_lens.png"
        "debut_light.png"
        "diagonal_waves.png"    // Special
        "honey_im_subtle.png"
        "pw_maze_white.png"
        "subtle_zebra_3d.png"
        "white_wave.png"
        "circles.png"
        "crosses.png"
        "grilled.png"
        "pw_pattern.png"
        "struckaxiom.png"
        "vichy.png"
        "wavecut.png"
        "whitey.png"
        "cream_pixels.png"
        "grey.png"
        "shinedotted.png"
        "stacked_circles.png"
        "noisy_grid_simple.png";

  @if ($inverted == 1) {
    background: url("https://raw.githubusercontent.com/thoughtbot/refills/master/source/images/textures/#{nth($texture-list, $texture-number)}"),
    linear-gradient($gradient-angle, $bg-color-1, $bg-color-2),
    center no-repeat $bg-color-1 scroll;
  }

  @else {
    background: url("https://raw.githubusercontent.com/thoughtbot/refills/master/source/images/textures/inverted/#{nth($texture-list, $texture-number)}"),
    linear-gradient($gradient-angle, $bg-color-1, $bg-color-2),
    center no-repeat $bg-color-1 scroll;
  }
}

@mixin flexbox-items($border-radius, $background-color, $font-color) {
  .flex-boxes {
    $base-border-radius: $border-radius !default;
    $base-background-color: $background-color !default;
    $dark-gray: #333 !default;
    $light-gray: #DDD !default;
    $base-font-color: $font-color !default;
    $flex-box-border-color: $light-gray;
    $flex-box-border: 1px solid $flex-box-border-color;
    $flex-box-background: lighten($light-gray, 10%);
    $flex-box-gutter: 0.4em;
    $flex-box-width: 50%;
    $flex-box-color: transparentize($base-font-color, 0.3);
    $flex-box-top-colors:
            $primary-color--light,
            $secondary-color--light,
            $primary-color--medium,
            $secondary-color--medium,
            $primary-color--light,
            $secondary-color--light;

    @include clearfix;
    //align-items: stretch;
    clear: both;
    display: flex;
    //flex-wrap: wrap;
    justify-content: center;
    text-align: center;

    .flex-box {
      align-self: stretch;
      background: $flex-box-background;
      border-radius: $base-border-radius;
      box-shadow: inset 0 0 1px $flex-box-border-color, 0 2px 4px darken($base-background-color, 10%);
      display: block;
      //flex-basis: 50%;
      //flex: 2 2 15em;
      margin: $flex-box-gutter;
      padding: 2em 2em 3em 2em;
      text-decoration: none;
      transition: all 0.2s ease-in-out;
      cursor: default;

      @for $i from 1 to 7 { // assign colors from $flex-box-top-colors list
        &:nth-child(#{$i}) {
          $color-from-list: nth($flex-box-top-colors, $i);
          border-top: 6px solid $color-from-list;

          &:focus,
          &:hover {
            background-color: transparentize($color-from-list, 0.9);
          }
        }
      }

      img {
        display: block;
        height: 3em;
        margin: 0 auto 1em;
        opacity: 0.4;
      }

      .flex-title {
        color: $flex-box-color;
        //font-size: 1.2em;
        margin-bottom: 0.5em;
      }

      p {
        color: transparentize($flex-box-color, 0.1);
        line-height: 1.5em;
        margin: auto;
      }
    }

    .flex-box-big {
      flex: 1 1 40em;
    }
  }

}